{"version":3,"sources":["pages/Admin/components/FocusContent/FocusContent.js","pages/Admin/components/SideNavigation/SideNavigation.js","pages/Admin/components/Parent/ParentComponent.js","pages/Admin/index.js","registerServiceWorker.js","index.js","app.js"],"names":["iconContainerStyles","width","height","FocusContent","renderCardIcon","react_default","a","createElement","style","className","index_es","size","icon","faTasks","renderCardFooter","components","faHeart","faShareAlt","renderAccordion","faCog","label","faUsers","faUser","selected_day","this","props","title","concat","footer","Component","dailies","name","img","SideNavigation","updateSelectedDay","e","selectedItem","_this","renderSliderBarItems","map","item","src","id","onSelect","Parent","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","state","SideNavigation_SideNavigation","FocusContent_FocusContent","AdminExample","ParentComponent_Parent","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","react_router_dom","basename","Application_default","react_router","exact","path","component","Admin","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3caf5598.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Card,\n  ButtonIcon,\n  Accordion,\n  AccordionSection\n} from \"react-rainbow-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTasks, faShareAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport { faUser, faUsers, faCog } from \"@fortawesome/free-solid-svg-icons\";\n\nconst iconContainerStyles = {\n  width: \"2.5rem\",\n  height: \"2.5rem\"\n};\n\nexport default class FocusContent extends Component {\n  renderCardIcon = () => (\n    <span\n      style={iconContainerStyles}\n      className=\"rainbow-background-color_success rainbow-border-radius_circle rainbow-align-content_center\"\n    >\n      <FontAwesomeIcon\n        size=\"lg\"\n        icon={faTasks}\n        className=\"rainbow-color_white\"\n      />\n    </span>\n  );\n\n  renderCardFooter = () => (\n    <div className=\"rainbow-align-content_space-between\">\n      <div className=\"rainbow-flex\">\n        <ButtonIcon\n          icon={<FontAwesomeIcon icon={faHeart} />}\n          className=\"rainbow-m-right_xx-small\"\n        />\n        <ButtonIcon icon={<FontAwesomeIcon icon={faShareAlt} />} />\n      </div>\n    </div>\n  );\n\n  renderAccordion = () => (\n    <Accordion className=\"accordion\">\n      <AccordionSection\n        icon={<FontAwesomeIcon icon={faCog} className=\"rainbow-color_brand\" />}\n        label=\"General Settings\"\n      >\n        A rainbow is a meteorological phenomenon that is caused by reflection,\n        refraction and dispersion of light in water droplets resulting in a\n        spectrum of light appearing in the sky.\n      </AccordionSection>\n      <AccordionSection\n        icon={\n          <FontAwesomeIcon icon={faUsers} className=\"rainbow-color_brand\" />\n        }\n        label=\"Users\"\n      >\n        A rainbow is a meteorological phenomenon that is caused by reflection,\n        refraction and dispersion of light in water droplets resulting in a\n        spectrum of light appearing in the sky.\n      </AccordionSection>\n      <AccordionSection\n        icon={<FontAwesomeIcon icon={faUser} className=\"rainbow-color_brand\" />}\n        label=\"Personal data\"\n      >\n        A rainbow is a meteorological phenomenon that is caused by reflection,\n        refraction and dispersion of light in water droplets resulting in a\n        spectrum of light appearing in the sky.\n      </AccordionSection>\n    </Accordion>\n  );\n\n  render() {\n    const { selected_day } = this.props;\n    return (\n      <div className=\"rainbow-flex rainbow-flex_row rainbow-justify_space-around\">\n        <div className=\"rainbow-m-around_xx-large\">\n          <Card\n            icon={this.renderCardIcon()}\n            title={`Your focus for ${selected_day}`}\n            footer={this.renderCardFooter()}\n          >\n            <div className=\"rainbow-p-around_xx-large rainbow-align-content_center rainbow-flex_column\">\n              {this.renderAccordion()}\n            </div>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n","/* eslint-disable import/no-extraneous-dependencies */\nimport React, { Component } from \"react\";\nimport { Sidebar, SidebarItem } from \"react-rainbow-components\";\n\nconst dailies = [\n  {\n    name: \"Monday\",\n    label: \"Monday\",\n    img: \"https://img.icons8.com/wired/64/000000/monday.png\"\n  },\n  {\n    name: \"Tuesday\",\n    label: \"Tuesday\",\n    img: \"https://img.icons8.com/wired/64/000000/tuesday.png\"\n  },\n  {\n    name: \"Wednesday\",\n    label: \"Wednesday\",\n    img: \"https://img.icons8.com/wired/64/000000/wednesday.png\"\n  },\n  {\n    name: \"Thursday\",\n    label: \"Thursday\",\n    img: \"https://img.icons8.com/wired/64/000000/thursday.png\"\n  },\n  {\n    name: \"Friday\",\n    label: \"Friday\",\n    img: \"https://img.icons8.com/wired/64/000000/friday.png\"\n  },\n  {\n    name: \"Saturday\",\n    label: \"Saturday\",\n    img: \"https://img.icons8.com/wired/64/000000/saturday.png\"\n  },\n  {\n    name: \"Sunday\",\n    label: \"Sunday\",\n    img: \"https://img.icons8.com/wired/64/000000/sunday.png\"\n  }\n];\n\nexport default class SideNavigation extends Component {\n  updateSelectedDay = (e, selectedItem) => {\n    this.props.updateSelectedDay(selectedItem);\n  };\n\n  renderSliderBarItems = () => {\n    return dailies.map(item => (\n      <SidebarItem\n        name={item.name}\n        label={item.label}\n        icon={<img src={item.img} />}\n      />\n    ));\n  };\n\n  render() {\n    return (\n      <aside className=\"rainbow-admin_vertical-navigation rainbow-p-vertical_small\">\n        <Sidebar\n          id=\"sidebar\"\n          onSelect={this.updateSelectedDay}\n          selectedItem={this.props.selected_day}\n        >\n          {this.renderSliderBarItems()}\n        </Sidebar>\n      </aside>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport FocusContent from \"../FocusContent/FocusContent\";\nimport SideNavigation from \"../SideNavigation/SideNavigation\";\n\nexport default class Parent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { selected_day: \"Monday\" };\n  }\n\n  updateSelectedDay = selected_day => {\n    this.setState({ selected_day: selected_day });\n  };\n\n  render() {\n    return (\n      <div>\n        <SideNavigation\n          selected_day={this.state.selected_day}\n          updateSelectedDay={this.updateSelectedDay}\n        />\n        <article className=\"rainbow-admin_main-inner\">\n          <FocusContent selected_day={this.state.selected_day} />\n        </article>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./styles.css\";\nimport \"./media-queries.css\";\nimport Parent from \"./components/Parent/ParentComponent\";\n\nexport default function AdminExample() {\n  return (\n    <main className=\"rainbow-admin_view-port rainbow-background-color_gray-1\">\n      <Parent />\n    </main>\n  );\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n","import React from \"react\";\nimport { createStore, combineReducers } from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport RainbowApplication from \"react-rainbow-components/components/Application\";\nimport Admin from \"./pages/Admin\";\nimport { HashRouter, Link } from \"react-router-dom\";\n\n// const rootReducer = combineReducers({\n//   form: formReducer\n// });\n\n// const store = createStore(rootReducer);\n\nexport default function App() {\n  return (\n  <HashRouter basename='/'>\n        <RainbowApplication>\n          <Route exact path=\"/\" component={Admin} />\n        </RainbowApplication>\n      </HashRouter>\n  );\n}\n"],"sourceRoot":""}