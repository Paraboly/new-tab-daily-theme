{"version":3,"sources":["pages/Admin/components/SideNavigation/SideNavigation.js","pages/Admin/Constants.js","pages/Admin/components/FocusEditModal/FocusEditModal.js","pages/Admin/components/FocusContent/FocusContent.js","pages/Admin/index.js","app.js","registerServiceWorker.js","index.js"],"names":["dailies","name","label","img","selectedItemStyle","backgroundColor","SideNavigation","updateSelectedDay","e","selectedItem","_this","props","renderSliderBarItems","map","item","react_default","a","createElement","components","style","selectedDay","icon","src","className","id","onSelect","this","Component","defaultDayMap","Monday","focusText","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","FocusEditModal","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","newFocusText","handleSaveButton","bind","assertThisInitialized","updateFocusText","_this2","_this$props","isModalOpen","focustText","closeModal","isOpen","title","onRequestClose","footer","variant","onClick","onChange","event","setState","target","value","placeholder","type","titleStyles","fontSize","color","fontWeight","textStyles","daytTextStyles","font-weight","FocusContent","dayMap","index_es","faPen","FocusEditModal_FocusEditModal","moment","require","AdminExample","localStorage","setItem","JSON","stringify","getItem","parse","format","SideNavigation_SideNavigation","FocusContent_FocusContent","history","createBrowserHistory","listen","location","ReactGA","set","page","pathname","pageview","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","initialize","ReactDOM","render","react_router_dom","basename","Application_default","react_router","exact","path","component","Admin","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8d79aca1.chunk.js","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\nimport React, { Component } from \"react\";\nimport { Sidebar, SidebarItem } from \"react-rainbow-components\";\n\nconst dailies = [\n  {\n    name: \"Monday\",\n    label: \"Monday\",\n    img: \"./assets/images/icons8-monday-50.png\"\n  },\n  {\n    name: \"Tuesday\",\n    label: \"Tuesday\",\n    img: \"./assets/images/icons8-tuesday-50.png\"\n  },\n  {\n    name: \"Wednesday\",\n    label: \"Wednesday\",\n    img: \"./assets/images/icons8-wednesday-50.png\"\n  },\n  {\n    name: \"Thursday\",\n    label: \"Thursday\",\n    img: \"./assets/images/icons8-thursday-50.png\"\n  },\n  {\n    name: \"Friday\",\n    label: \"Friday\",\n    img: \"./assets/images/icons8-friday-50.png\"\n  },\n  {\n    name: \"Saturday\",\n    label: \"Saturday\",\n    img: \"./assets/images/icons8-saturday-50.png\"\n  },\n  {\n    name: \"Sunday\",\n    label: \"Sunday\",\n    img: \"./assets/images/icons8-sunday-50.png\"\n  }\n];\nconst selectedItemStyle = {\n  backgroundColor: '#D8D8D8'\n }\nexport default class SideNavigation extends Component {\n  updateSelectedDay = (e, selectedItem) => {\n    this.props.updateSelectedDay(selectedItem);\n  };\n\n  renderSliderBarItems = () => {\n    return dailies.map(item => (\n      <SidebarItem\n        style={item.name == this.props.selectedDay ? selectedItemStyle: null}\n        name={item.name}\n        label={item.label}\n        icon={<img src={item.img} />}\n      />\n    ));\n  };\n\n  render() {\n    return (\n      <aside className=\"rainbow-admin_vertical-navigation rainbow-p-vertical_medium\">\n        <Sidebar\n          id=\"sidebar\"\n          onSelect={this.updateSelectedDay}\n          selectedItem={this.props.selectedDay}\n        >\n          {this.renderSliderBarItems()}\n        </Sidebar>\n      </aside>\n    );\n  }\n}\n","\nconst defaultDayMap = {\n    \"Monday\": {\n      focusText: \"Marketing\",\n    },\n    \"Tuesday\": {\n      focusText: \"Business\",\n    },\n    \"Wednesday\": {\n      focusText: \"Sales\",\n    },\n    \"Thursday\": {\n      focusText: \"Growth\",\n    },\n    \"Friday\": {\n      focusText: \"R&D\",\n    },\n    \"Saturday\": {\n      focusText: \"Review\",\n    },\n    \"Sunday\": {\n      focusText: \"Review\",\n    }\n  }\n\nexport {defaultDayMap}","import React, { Component } from \"react\";\nimport { Modal, Button } from 'react-rainbow-components';\nimport { Input } from 'react-rainbow-components';\n\nexport default class FocusEditModal extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            newFocusText: ''\n        }\n        this.handleSaveButton = this.handleSaveButton.bind(this);\n    }\n\n    handleSaveButton() {\n        var newFocusText = this.state.newFocusText;\n        if (newFocusText != '') {\n            this.props.updateFocusText(newFocusText);\n        }\n    }\n\n    render() {\n        const { isModalOpen, focustText, closeModal } = this.props;\n        return (\n            <Modal\n                isOpen={isModalOpen}\n                title=\"Enter your focus item\"\n                onRequestClose={() => closeModal()}\n                footer={\n                    <div className=\"rainbow-flex rainbow-justify_center\">\n                        <Button label=\"Save\"\n                            variant=\"brand\"\n                            onClick={this.handleSaveButton}\n                        />\n                    </div>\n                }\n            >\n                <Input\n                    onChange={event => this.setState({ newFocusText: event.target.value })}\n                    placeholder={focustText}\n                    type=\"text\"\n                />\n            </Modal>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPen } from '@fortawesome/free-solid-svg-icons';\nimport FocusEditModal from \"../FocusEditModal/FocusEditModal\";\nimport { VisualPicker, VisualPickerOption, Button } from \"react-rainbow-components\";\n\nconst titleStyles = {\n  fontSize: 40,\n  color: \"#061c3f\",\n  fontWeight: 300\n};\n\nconst textStyles = {\n  fontSize: 30,\n  fontWeight: 300\n};\n\nconst daytTextStyles = {\n  color: \"#FF0000\",\n  \"font-weight\": \"bold\"\n};\n\nexport default class FocusContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false\n    }\n  }\n  closeModal = () => {\n    this.setState({ isModalOpen: false })\n  }\n\n  updateFocusText = (newFocusText) => {\n    this.props.updateFocusText(newFocusText);\n    this.setState({ isModalOpen: false });\n  }\n  render() {\n    const { selectedDay, dayMap } = this.props;\n    return (\n      <div className=\"rainbow-align-content_center rainbow-m-around_small rainbow-flex_column\">\n        <div className=\"rainbow-align-content_center rainbow-flex_row\">\n          <h1 style={titleStyles}>\n            Your focus for <span style={daytTextStyles}>{selectedDay}</span>\n          </h1>\n          <Button variant=\"brand\"\n            className=\"rainbow-m-around_medium\"\n            onClick={() => {\n              this.setState({isModalOpen:true});\n            }}\n          >\n            <FontAwesomeIcon icon={faPen} className=\"rainbow-m-left_small\" />\n          </Button>\n        </div>\n\n        <VisualPicker value=\"option-1\">\n          <VisualPickerOption name=\"option-1\">\n            <h2 style={textStyles}>{dayMap[selectedDay].focusText}</h2>\n          </VisualPickerOption>\n        </VisualPicker>\n        <FocusEditModal closeModal={this.closeModal} \n          focustText= {dayMap[selectedDay].focusText} \n          updateFocusText={this.updateFocusText} \n          isModalOpen={this.state.isModalOpen} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./styles.css\";\nimport \"./media-queries.css\";\nimport SideNavigation from \"./components/SideNavigation/SideNavigation\";\nimport {defaultDayMap} from './Constants';\nimport FocusContent from \"./components/FocusContent/FocusContent\";\nvar moment = require('moment');\n\nclass AdminExample extends Component {\n\n  constructor(props) {\n    super(props);\n    let dayMap = null;\n    if(!localStorage.getItem('dayMap')) {\n      dayMap = defaultDayMap;\n    }\n    else {\n      dayMap = JSON.parse(localStorage.getItem('dayMap'));\n    }\n    this.state = { \n      selectedDay: moment().format('dddd'),\n      dayMap: dayMap\n    };\n  }\n\n  updateSelectedDay = selectedDay => {\n    this.setState({ selectedDay: selectedDay });\n  };\n  updateFocusText = focusText => {\n    let dayMap = this.state.dayMap;\n    dayMap[this.state.selectedDay].focusText = focusText;\n    this.setState({ dayMap:dayMap });\n    localStorage.setItem('dayMap', JSON.stringify(dayMap));\n  };\n  render() {\n    return (\n      <main className=\"rainbow-admin_view-port rainbow-background-color_gray-1\">\n        <SideNavigation\n            selectedDay={this.state.selectedDay}\n            updateSelectedDay={this.updateSelectedDay}\n          />\n        <article className=\"rainbow-admin_main-inner\">\n          <FocusContent selectedDay={this.state.selectedDay} dayMap={this.state.dayMap} updateFocusText={this.updateFocusText} />\n        </article>\n          \n      </main>\n    );\n  }\n}\n\nexport default AdminExample;\n","import React from \"react\";\nimport { createStore, combineReducers } from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport RainbowApplication from \"react-rainbow-components/components/Application\";\nimport Admin from \"./pages/Admin\";\nimport { HashRouter, Link } from \"react-router-dom\";\nimport { createBrowserHistory } from 'history';\nimport ReactGA from 'react-ga';\n\n// const rootReducer = combineReducers({\n//   form: formReducer\n// });\n\n// const store = createStore(rootReducer);\nconst history = createBrowserHistory();\nhistory.listen(location => {\n  ReactGA.set({ page: location.pathname }); // Update the user's current page\n  ReactGA.pageview(location.pathname); // Record a pageview for the given page\n});\nexport default function App() {\n  return (\n      <Router basename=\"/new-tab-daily-theme\" history={history}>\n        <RainbowApplication>\n          <Route exact path=\"/\" component={Admin} />\n        </RainbowApplication>\n      </Router>\n  );\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport ReactGA from 'react-ga';\n\nconst trackingId = \"UA-150458220-2\"; \nReactGA.initialize(trackingId);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}