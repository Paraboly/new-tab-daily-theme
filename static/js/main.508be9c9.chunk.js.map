{"version":3,"sources":["pages/Admin/components/FocusContent/FocusContent.js","pages/Admin/components/SideNavigation/SideNavigation.js","pages/Admin/components/Parent/ParentComponent.js","pages/Admin/index.js","app.js","registerServiceWorker.js","index.js"],"names":["titleStyles","fontSize","color","fontWeight","textStyles","daytTextStyles","font-weight","FocusContent","selected_day","this","props","react_default","a","createElement","className","style","components","value","name","Component","dailies","label","img","SideNavigation","updateSelectedDay","e","selectedItem","_this","renderSliderBarItems","map","item","icon","src","id","onSelect","Parent","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","state","SideNavigation_SideNavigation","FocusContent_FocusContent","AdminExample","ParentComponent_Parent","history","createBrowserHistory","listen","location","ReactGA","set","page","pathname","pageview","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","initialize","ReactDOM","render","react_router_dom","basename","Application_default","react_router","exact","path","component","Admin","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.508be9c9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { VisualPicker, VisualPickerOption } from 'react-rainbow-components';\n\n\n\nconst titleStyles = {\n  fontSize: 40,\n  color: '#061c3f',\n  fontWeight: 300,\n};\n\nconst textStyles = {\n  fontSize: 30,\n  fontWeight: 300,\n};\n\nconst daytTextStyles = {\n  color: '#FF0000',\n  \"font-weight\": \"bold\"\n};\n\nexport default class FocusContent extends Component {\n\n\n  render() {\n    const { selected_day } = this.props;\n    return (\n      <div className=\"rainbow-align-content_center rainbow-m-around_xx-large rainbow-flex_column\">\n          <h1 style={titleStyles} >\n            Your focus for <span style={daytTextStyles}>{selected_day}</span>\n          </h1>\n          <VisualPicker\n            value=\"option-1\"\n          >\n            <VisualPickerOption name=\"option-1\">\n              <h2 style={textStyles}>Design</h2>\n            </VisualPickerOption>\n          </VisualPicker>\n      </div>\n    );\n  }\n}\n","/* eslint-disable import/no-extraneous-dependencies */\nimport React, { Component } from \"react\";\nimport { Sidebar, SidebarItem } from \"react-rainbow-components\";\n\nconst dailies = [\n  {\n    name: \"Monday\",\n    label: \"Monday\",\n    img: \"./assets/images/icons8-monday-50.png\"\n  },\n  {\n    name: \"Tuesday\",\n    label: \"Tuesday\",\n    img: \"./assets/images/icons8-tuesday-50.png\"\n  },\n  {\n    name: \"Wednesday\",\n    label: \"Wednesday\",\n    img: \"./assets/images/icons8-wednesday-50.png\"\n  },\n  {\n    name: \"Thursday\",\n    label: \"Thursday\",\n    img: \"./assets/images/icons8-thursday-50.png\"\n  },\n  {\n    name: \"Friday\",\n    label: \"Friday\",\n    img: \"./assets/images/icons8-friday-50.png\"\n  },\n  {\n    name: \"Saturday\",\n    label: \"Saturday\",\n    img: \"./assets/images/icons8-saturday-50.png\"\n  },\n  {\n    name: \"Sunday\",\n    label: \"Sunday\",\n    img: \"./assets/images/icons8-sunday-50.png\"\n  }\n];\n\nexport default class SideNavigation extends Component {\n  updateSelectedDay = (e, selectedItem) => {\n    this.props.updateSelectedDay(selectedItem);\n  };\n\n  renderSliderBarItems = () => {\n    return dailies.map(item => (\n      <SidebarItem\n        name={item.name}\n        label={item.label}\n        icon={<img src={item.img} />}\n      />\n    ));\n  };\n\n  render() {\n    return (\n      <aside className=\"rainbow-admin_vertical-navigation rainbow-p-vertical_small\">\n        <Sidebar\n          id=\"sidebar\"\n          onSelect={this.updateSelectedDay}\n          selectedItem={this.props.selected_day}\n        >\n          {this.renderSliderBarItems()}\n        </Sidebar>\n      </aside>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport FocusContent from \"../FocusContent/FocusContent\";\nimport SideNavigation from \"../SideNavigation/SideNavigation\";\n\nexport default class Parent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { selected_day: \"Monday\" };\n  }\n\n  updateSelectedDay = selected_day => {\n    this.setState({ selected_day: selected_day });\n  };\n\n  render() {\n    return (\n      <div>\n        <SideNavigation\n          selected_day={this.state.selected_day}\n          updateSelectedDay={this.updateSelectedDay}\n        />\n        <article className=\"rainbow-admin_main-inner\">\n          <FocusContent selected_day={this.state.selected_day} />\n        </article>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./styles.css\";\nimport \"./media-queries.css\";\nimport Parent from \"./components/Parent/ParentComponent\";\n\nexport default function AdminExample() {\n  return (\n    <main className=\"rainbow-admin_view-port rainbow-background-color_gray-1\">\n      <Parent />\n    </main>\n  );\n}\n","import React from \"react\";\nimport { createStore, combineReducers } from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport RainbowApplication from \"react-rainbow-components/components/Application\";\nimport Admin from \"./pages/Admin\";\nimport { HashRouter, Link } from \"react-router-dom\";\nimport { createBrowserHistory } from 'history';\nimport ReactGA from 'react-ga';\n\n// const rootReducer = combineReducers({\n//   form: formReducer\n// });\n\n// const store = createStore(rootReducer);\nconst history = createBrowserHistory();\nhistory.listen(location => {\n  ReactGA.set({ page: location.pathname }); // Update the user's current page\n  ReactGA.pageview(location.pathname); // Record a pageview for the given page\n});\nexport default function App() {\n  return (\n      <Router basename=\"/new-tab-daily-theme\" history={history}>\n        <RainbowApplication>\n          <Route exact path=\"/\" component={Admin} />\n        </RainbowApplication>\n      </Router>\n  );\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport ReactGA from 'react-ga';\n\nconst trackingId = \"UA-150458220-2\"; \nReactGA.initialize(trackingId);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}